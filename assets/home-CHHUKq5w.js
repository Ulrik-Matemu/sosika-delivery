import"./style-ETqBUHLR.js";document.addEventListener("DOMContentLoaded",function(){const e=document.getElementById("toggleButton"),o=localStorage.getItem("deliveryPersonId");e.addEventListener("click",async function(){try{const t=await fetch(`https://sosika-backend.onrender.com/api/deliveryPerson/${o}/toggle-active`,{method:"PUT",headers:{"Content-Type":"application/json"}}),r=await t.json();t.ok?(e.textContent=r.is_active?"Go Offline":"Go Online",e.classList.toggle("active",r.is_active),console.log("Updated status:",r.is_active)):console.error("Error:",r.message)}catch(t){console.error("Failed to toggle status:",t)}})});const c=io("https://sosika-backend.onrender.com"),l=localStorage.getItem("deliveryPersonId");let a,d=null,i=null;console.log(l);c.emit("joinDelivery",l);function f(e){document.getElementById("orderNumber").textContent=e.orderId,document.getElementById("orderNotification").style.display="block"}c.on("newOrderAvailable",e=>{console.log("New order received:",e),a=e,f(e)});window.acceptOrder=function(){console.log("Order accepted"),document.getElementById("btn-acc-dec").style.display="none",document.getElementById("btn-acc-dec2").style.display="none",document.getElementById("btn-acc-dec3").style.display="none",c.emit("acceptOrder",{orderId:a.orderId,deliveryPersonId:l}),fetch(`https://sosika-backend.onrender.com/api/orders/${a.orderId}/accept`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({delivery_person_id:l})}).then(e=>e.json().then(o=>({status:e.status,body:o}))).then(({status:e,body:o})=>{e===400?alert(o.error):e===404?alert("Order not found. It may have been assigned to another delivery person."):(console.log("Order accepted:",o),localStorage.setItem("assignedOrder",JSON.stringify(a)),m(a.pickup_location,a.dropoff_location))}).catch(e=>console.error("Error:",e))};const u=document.createElement("div");u.innerHTML='<div style="background-color: green; color: white; padding: 5px; border-radius: 50px; font-size: 12px; text-align: center; width: max-content;">Pick Up</div>';const p=document.createElement("div");p.innerHTML='<div style="background-color: Red; color: white; padding: 5px; border-radius: 50px; font-size: 12px; text-align: center; width: max-content;">Drop</div>';function m(e,o){g(),d=new mapboxgl.Marker({element:u}).setLngLat([e.y,e.x]).setPopup(new mapboxgl.Popup().setText("Pickup location")).addTo(n),i=new mapboxgl.Marker({element:p}).setLngLat([o.x,o.y]).setPopup(new mapboxgl.Popup().setText("Dropoff location")).addTo(n);const t=new mapboxgl.LngLatBounds;t.extend([e.y,e.x]),t.extend([o.x,o.y]),n.fitBounds(t,{padding:20}),v(e,o)}function h(){n.getLayer("route")&&n.removeLayer("route"),n.getSource("route")&&n.removeSource("route")}function g(){d&&(d.remove(),d=null),i&&(i.remove(),i=null),h()}function v(e,o){const t=`https://api.mapbox.com/directions/v5/mapbox/driving/${e.y},${e.x};${o.x},${o.y}?geometries=geojson&access_token=${mapboxgl.accessToken}`;fetch(t).then(r=>{if(!r.ok)throw new Error(`HTTP Error: ${r.status}`);return r.json()}).then(r=>{if(console.log("API Response:",r),!r.routes||r.routes.length===0)throw new Error("No route found in response.");const s=r.routes[0].geometry;if(console.log("Extracted Route Geometry:",s),!s)throw new Error("Route geometry is missing.");n.getSource("route")?n.getSource("route").setData({type:"Feature",properties:{},geometry:s}):(n.addSource("route",{type:"geojson",data:{type:"Feature",properties:{},geometry:s}}),n.addLayer({id:"route",type:"line",source:"route",layout:{"line-join":"round","line-cap":"round"},paint:{"line-color":"#1DB954","line-width":5,"line-opacity":.8}}))}).catch(r=>console.error("Error fetching route:",r))}c.on("orderAssigned",e=>{console.log("New Order Assigned:",e),alert(`New order available: ${e.orderId}`)});c.on("orderCompleted",e=>{console.log("Order Completed:",e),alert(`Order ${e.orderId} is marked as completed.`)});document.addEventListener("DOMContentLoaded",function(){async function e(){const o=localStorage.getItem("assignedOrder");if(console.log(o),o){let t=JSON.parse(o);try{console.log(t);const s=await(await fetch(`https://sosika-backend.onrender.com/api/orders/${t.orderId}`)).json();console.log(s),s.message==="Order not found"?console.log("Order not found"):s.order_status==="completed"?(console.log("Order completed. Removing from localStorage."),g(),localStorage.removeItem("assignedOrder"),location.reload()):s.order_status==="in_progress"?(console.log("Order status changed back to 'in_progress'. Alerting delivery person."),alert("Order status changed back to 'In-Progress'. Please check your assigned orders."),g(),localStorage.removeItem("assignedOrder"),location.reload()):(console.log("Restoring assigned order:",t),m(t.pickup_location,t.dropoff_location))}catch(r){console.error("Error fetching order status:",r)}}}e(),setInterval(e,1e4)});mapboxgl.accessToken="pk.eyJ1IjoiLS11bHJpa2siLCJhIjoiY203YzV5dHIyMGY3NjJqc2Q5MmpxNm4ycCJ9.TilyKOmKcw2ekL2PY8Xofw";const n=new mapboxgl.Map({container:"map",style:"mapbox://styles/mapbox/streets-v11",center:[34.888822,-6.369028],zoom:5}),b=new mapboxgl.Marker().setLngLat([0,0]).addTo(n);function k(e){const o=e.coords.longitude,t=e.coords.latitude;b.setLngLat([o,t]),n.setCenter([o,t])}navigator.geolocation?navigator.geolocation.watchPosition(k,e=>console.log("Geolocation error:",e),{enableHighAccuracy:!0}):alert("Geolocation is not supported by your browser.");async function x(){if(!navigator.geolocation){console.error("Geolocation is not supported by this browser.");return}navigator.geolocation.getCurrentPosition(async e=>{const o=e.coords.latitude,t=e.coords.longitude,r=localStorage.getItem("deliveryPersonId");try{const y=await(await fetch(`https://sosika-backend.onrender.com/api/deliveryPerson/update-location/${r}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({latitude:o,longitude:t})})).json();console.log("Location updated:",y)}catch(s){console.error("Error updating location:",s)}},e=>{console.error("Error fetching location:",e)})}setInterval(x,1e4);
